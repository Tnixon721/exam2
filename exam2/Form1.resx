<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="imageTempGuage.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RK5CYII=
</value>
  </data>
</root>